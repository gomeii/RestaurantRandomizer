plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

import java.util.Properties

// Function to load the .env file
def loadEnvProperties() {
    def envFile = rootProject.file('.env')
    def properties = new Properties()
    if (envFile.exists()) {
        envFile.withReader('UTF-8') { reader ->
            properties.load(reader)
        }
    }
    return properties
}

// Load environment properties
def envProperties = loadEnvProperties()

android {
    namespace = "com.example.restaurantrandomizer"
    compileSdkVersion = 35
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.restaurantrandomizer"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdkVersion = flutter.minSdkVersion
        targetSdkVersion = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName

        // Load API Key from gradle.properties
        manifestPlaceholders["API_KEY"] = envProperties.getProperty("GOOGLE_MAPS_API_KEY", "")
    }

    buildFeatures {
        viewBinding = true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
